package com.coforge.training.agribid.bidder.model;

import com.fasterxml.jackson.annotation.JsonIgnore;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Lob;
import jakarta.persistence.OneToOne;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Size;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;



@Entity

@Table(name="bidder_registration")
public class BidderRegistration
{
		

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long bid;


	@Column(name = "full_name")
	@NotBlank(message = "Full name is mandatory")
	private String fullName;



	@Column(name = "contact_no", unique = true, nullable = false)
	//@NotBlank(message = "Contact number is mandatory")
	private long contactNo;


	@Column(name = "email_id", nullable = false)
	@NotBlank(message = "Email ID is mandatory")
	@Email(message = "Email should be valid")
	private String email;


	@Column(name = "account_no")
	@NotBlank(message = "Account number is mandatory")
	private String accountNo;

	@Column(name = "ifsc_code")
	@NotBlank(message = "IFSC code is mandatory")
	private String ifscCode;


	@Column(name = "password")
	@NotBlank(message = "Password is mandatory")
	@Size(min = 8, message = "Password must be at least 8 characters long")
	private String password;

	@Column(name = "confirm_password")
	@NotBlank(message = "Confirm password is mandatory")
	@Size(min = 8, max = 255, message = "Password must contain between 8 and 255 characters")
	private String confirmPassword;

	@OneToOne(cascade = CascadeType.ALL)
	private BidderAddress address;


	@Lob
	@JsonIgnore
	private byte[] aadhaar;

	@Lob
	@JsonIgnore
	private byte[] pan;


	@Lob
	@JsonIgnore
	private byte[] tradeLicense;

	
	
	
	

	public BidderRegistration() {
		super();
		
	}






	public BidderRegistration(Long bid, @NotBlank(message = "Full name is mandatory") String fullName, long contactNo,
			@NotBlank(message = "Email ID is mandatory") @Email(message = "Email should be valid") String email,
			@NotBlank(message = "Account number is mandatory") String accountNo,
			@NotBlank(message = "IFSC code is mandatory") String ifscCode,
			@NotBlank(message = "Password is mandatory") @Size(min = 8, message = "Password must be at least 8 characters long") String password,
			@NotBlank(message = "Confirm password is mandatory") @Size(min = 8, max = 255, message = "Password must contain between 8 and 255 characters") String confirmPassword,
			BidderAddress address, byte[] aadhaar, byte[] pan, byte[] tradeLicense) {
		super();
		this.bid = bid;
		this.fullName = fullName;
		this.contactNo = contactNo;
		this.email = email;
		this.accountNo = accountNo;
		this.ifscCode = ifscCode;
		this.password = password;
		this.confirmPassword = confirmPassword;
		this.address = address;
		this.aadhaar = aadhaar;
		this.pan = pan;
		this.tradeLicense = tradeLicense;
	}






	public Long getBid() {
		return bid;
	}






	public void setBid(Long bid) {
		this.bid = bid;
	}






	public String getFullName() {
		return fullName;
	}






	public void setFullName(String fullName) {
		this.fullName = fullName;
	}






	public long getContactNo() {
		return contactNo;
	}






	public void setContactNo(long contactNo) {
		this.contactNo = contactNo;
	}






	public String getEmail() {
		return email;
	}






	public void setEmail(String email) {
		this.email = email;
	}






	public String getAccountNo() {
		return accountNo;
	}






	public void setAccountNo(String accountNo) {
		this.accountNo = accountNo;
	}






	public String getIfscCode() {
		return ifscCode;
	}






	public void setIfscCode(String ifscCode) {
		this.ifscCode = ifscCode;
	}






	public String getPassword() {
		return password;
	}






	public void setPassword(String password) {
		this.password = password;
	}






	public String getConfirmPassword() {
		return confirmPassword;
	}






	public void setConfirmPassword(String confirmPassword) {
		this.confirmPassword = confirmPassword;
	}






	public BidderAddress getAddress() {
		return address;
	}






	public void setAddress(BidderAddress address) {
		this.address = address;
	}






	public byte[] getAadhaar() {
		return aadhaar;
	}






	public void setAadhaar(byte[] aadhaar) {
		this.aadhaar = aadhaar;
	}






	public byte[] getPan() {
		return pan;
	}






	public void setPan(byte[] pan) {
		this.pan = pan;
	}






	public byte[] getTradeLicense() {
		return tradeLicense;
	}






	public void setTradeLicense(byte[] tradeLicense) {
		this.tradeLicense = tradeLicense;
	}
	
	
	
	

	
	
	
	
}
