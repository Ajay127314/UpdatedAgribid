package com.coforge.training.agribid.bidder.model;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.OneToOne;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.Size;

@Entity
@Table(name="personal_details")

public class Bidder
{
	
	
 
	
	@Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
	private Long bid;
	
	
	@Column(name = "full_name")
    @NotBlank(message = "Full name is mandatory")
	private String fullName;
	
	
	
	@Column(name = "contact_no", unique = true, nullable = false)
    //@NotBlank(message = "Contact number is mandatory")
	private long contactNo;
	
	
	@Column(name = "email_id", nullable = false)
    @NotBlank(message = "Email ID is mandatory")
    @Email(message = "Email should be valid")
	private String email;
	
	   
    @Column(name = "account_no")
    @NotBlank(message = "Account number is mandatory")
    private String accountNo;
 
    @Column(name = "ifsc_code")
    @NotBlank(message = "IFSC code is mandatory")
    private String ifscCode;
    
    
    @Column(name = "password")
    @NotBlank(message = "Password is mandatory")
    @Size(min = 8, message = "Password must be at least 8 characters long")
    private String password;
 
    @Column(name = "confirm_password")
    @NotBlank(message = "Confirm password is mandatory")
    @Size(min = 8, max = 255, message = "Password must contain between 8 and 255 characters")
    private String confirmPassword;
    
    @OneToOne(cascade = CascadeType.ALL)
    private Address address;
    
    

	public Bidder(Long bid, String fullName, long contactNo,
			 String email,
			 String accountNo,
			 String ifscCode,
			 String password,
			String confirmPassword) {
		super();
		this.bid = bid;
		this.fullName = fullName;
		this.contactNo = contactNo;
		this.email = email;
		this.accountNo = accountNo;
		this.ifscCode = ifscCode;
		this.password = password;
		this.confirmPassword = confirmPassword;
	}



	public Bidder(Long bid,  String fullName, long contactNo,
			String email,
			 String accountNo,
		String ifscCode,
         String password,
		 String confirmPassword,
			Address address) {
		super();
		this.bid = bid;
		this.fullName = fullName;
		this.contactNo = contactNo;
		this.email = email;
		this.accountNo = accountNo;
		this.ifscCode = ifscCode;
		this.password = password;
		this.confirmPassword = confirmPassword;
		this.address = address;
	}
    
	
	
    
    
    
    

	
	
	
    	
}
